REM  *****  BASIC  *****

Dim styles(0) As String
Dim wordcounts(0) As long
Dim Dlg As Object

Sub waitDialog
	DialogLibraries.LoadLibrary("Standard")
	Dlg = CreateUnoDialog(DialogLibraries.Standard.Dialog1)
	Dlg.Title = "Progress"
	Dlg.getControl("Label1").Text = " wait for it... "
	Dlg.setVisible(True)
End Sub

Sub StyleWordCount
	Dim Enum As Object
	Dim TextElement As Object
	' Create document object
	Dim Doc As Object
	Doc = ThisComponent
	' Create enumeration object
	Enum = Doc.Text.createEnumeration
	
	waitDialog
	
	' Loop over all text elements
	While Enum.hasMoreElements
		TextElement = Enum.nextElement
		
		If TextElement.supportsService("com.sun.star.text.TextTable") Then
			countWordsTable(TextElement)
		End If

		If TextElement.supportsService("com.sun.star.text.Paragraph") Then
			countWordsStandard(TextElement)
		End If
	Wend
	
	displayResults
End Sub

Sub countWordsTable(Table As Object)
	Dim Rows As Object
	Dim RowIndex As Integer
	Dim Cols As Object
	Dim ColIndex As Integer
	Dim CellName As String
	Dim Cell As Object
	Dim paragraph As String
	Dim style As String
	Dim wordcount As long
	
	Rows = Table.getRows
	Cols = Table.getColumns
	
	For RowIndex = 1 To Rows.getCount()
		For ColIndex = 1 To Cols.getCount()
			CellName = Chr(Asc("A") - 1 + ColIndex) & RowIndex
			On Error Resume Next
				Cell = Table.getCellByName(CellName)
				paragraph = Trim(Cell.String)
				' Get the style
				style = Cell.createTextCursor().ParaStyleName
				countWords(paragraph, style)
		Next
	Next
End Sub

Sub countWordsStandard(TextElement as Object)
	Dim paragraph As String
	Dim style As String
	Dim wordcount As long
	' Don't know why, but test was off by 1 if not trimmed.
	paragraph = Trim(TextElement.String)
	' Get the style
	style = TextElement.ParaStyleName
	' Count the words in paragraph
	countWords(paragraph, style)
End Sub

Sub countWords(paragraph As String, style As String)
	Dim brk as Object
	Dim startpos as Long
	Dim lc as new com.sun.star.lang.Locale
	Dim lang as new com.sun.star.i18n.LanguageCountryInfo
	Dim wordcount as Long
	
	brk = createUnoService("com.sun.star.i18n.BreakIterator")
	nextwd = Boundary()
	startpos = 0
	lc.Language = lang.language
	nextwd = brk.nextWord(paragraph, startpos, lc, 3)
	wordcount = 0
	
	While startpos <> nextwd.endPos
		wordcount = wordcount + 1
		startpos = nextwd.startPos
		nextwd = brk.nextWord(paragraph, startpos, lc, 3)
	wend
	
	tallyCount(wordcount, style)
End Sub

Sub tallyCount(wordcount As Long, style As String)
	' Check style against array to see if it exists
	if styles(0) = none and wordcounts(0) = none then
		styles(0) = style
		wordcounts(0) = wordcount
	else
		for index = 0 to UBound(styles)
			if styles(index) = style then
				'if so, add word count to existing count
				wordcounts(index) = wordcounts(index) + wordcount
				Exit For
			elseif index = UBound(styles) then
				ReDim Preserve styles(UBound(styles)+1)
				ReDim Preserve wordcounts(UBound(wordcounts)+1)
				'if not, add style and word count to array
				styles(UBound(styles)) = style
				wordcounts(UBound(wordcounts)) = wordcount
			end if
		next index
	end if
End Sub

Sub displayResults
	Dim mbText as String
	Dim mbTotal as long
	
	Dlg.dispose()
	
	for i = 0 to UBound(styles)
		mbText = mbText + styles(i) + " : " + wordcounts(i) + chr(13)
		mbTotal = mbTotal + wordcounts(i)
	next i
	
	MsgBox (mbText + chr(13) + "Total : " + mbTotal, 0, "Style Word Count")
End Sub
