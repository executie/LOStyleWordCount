REM  *****  BASIC  *****
'Copyright (c) 2015 Executie
'Permission is hereby granted, free of charge, to any person obtaining a copy
'of this software and associated documentation files (the "Software"), to deal
'in the Software without restriction, including without limitation the rights
'to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
'copies of the Software, and to permit persons to whom the Software is
'furnished to do so, subject to the following conditions:

'The above copyright notice and this permission notice shall be included in
'all copies or substantial portions of the Software.

'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
'IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
'FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
'AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
'LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
'OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
'THE SOFTWARE.

Dim styles(0) As String
Dim wordcounts(0) As long
Dim Dlg As Object

Sub waitDialog
	DialogLibraries.LoadLibrary("Standard")
	Dlg = CreateUnoDialog(DialogLibraries.Standard.WaitDialog)
	Dlg.Title = "Progress"
	Dlg.getControl("Label1").Text = " wait for it... "
	Dlg.setVisible(True)
End Sub

Sub StyleWordCount
	Dim Enum As Object
	Dim TextElement As Object
	' Create document object
	Dim Doc As Object
	Doc = ThisComponent
	
	If NOT Doc.supportsService("com.sun.star.text.TextDocument") Then
		MsgBox "The current document is not a Writer text document", 48, "Error"
		Exit Sub
	End If
	
	' Create enumeration object
	Enum = Doc.Text.createEnumeration
	
	waitDialog
	
	' Loop over all text elements
	While Enum.hasMoreElements
		TextElement = Enum.nextElement
		
		If TextElement.supportsService("com.sun.star.text.TextTable") Then
			countWordsTable(TextElement)
		End If

		If TextElement.supportsService("com.sun.star.text.Paragraph") Then
			countWordsStandard(TextElement)
		End If
	Wend
	
	countWordsNotes(Doc)
	
	displayResults
End Sub

Sub countWordsTable(Table As Object)
	Dim cellNames() As String
	Dim Cell As Object

	cellNames = Table.getCellNames()
	For i = 0 To UBound(cellNames())
		Cell = Table.getCellByName(cellNames(i))
		
		Dim Enum As Object
		Dim TextElement As Object
		
		Enum = Cell.Text.createEnumeration
		While Enum.hasMoreElements
			TextElement = Enum.nextElement
			
			If TextElement.supportsService("com.sun.star.text.TextTable") Then
				countWordsTable(TextElement)
			End If
	
			If TextElement.supportsService("com.sun.star.text.Paragraph") Then
				countWordsStandard(TextElement)
			End If
		Wend
	Next
End Sub

Sub countWordsStandard(TextElement As Object)
	Dim paragraph As String
	Dim style As String
	' Don't know why, but test was off by 1 if not trimmed.
	paragraph = Trim(TextElement.getString())
	' Get the style
	style = TextElement.ParaStyleName
	' Count the words in paragraph
	countWords(paragraph, style)
End Sub

Sub countWordsNotes(Doc As Object)
	Dim footnotes() As Object
	Dim footnote As Object
	
	footnotes() = Doc.getFootnotes()
	For i = 0 to footnotes.getCount() - 1
		footnote = footnotes.getByIndex(i)
		
		Dim EnumFoot As Object
		Dim TextElementFoot As Object
		
		EnumFoot = footnote.Text.createEnumeration
		While EnumFoot.hasMoreElements
			TextElementFoot = Enumfoot.nextElement
			
			If TextElementFoot.supportsService("com.sun.star.text.TextTable") Then
				countWordsTable(TextElementFoot)
			End If
			
			If TextElementFoot.supportsService("com.sun.star.text.Paragraph") Then
				countWordsStandard(TextElementFoot)
			End If
		Wend
	Next
	
	Dim endnotes() As Object
	Dim endnote As Object
	
	endnotes() = Doc.getEndnotes()
	For i = 0 to endnotes.getCount() - 1
		endnote = endnotes.getByIndex(i)
		
		Dim EnumEnd As Object
		Dim TextElementEnd As Object
		
		EnumEnd = endnote.Text.createEnumeration
		While EnumEnd.hasMoreElements
			TextElementEnd = Enumend.nextElement
			
			If TextElementEnd.supportsService("com.sun.star.text.TextTable") Then
				countWordsTable(TextElementEnd)
			End If
			
			If TextElementEnd.supportsService("com.sun.star.text.Paragraph") Then
				countWordsStandard(TextElementEnd)
			End If
		Wend
	Next
End Sub

Sub countWords(paragraph As String, style As String)
	Dim brk As Variant
	Dim startpos As Long
	Dim lc As New com.sun.star.lang.Locale
	Dim lang As New com.sun.star.i18n.LanguageCountryInfo
	Dim nextwd As New com.sun.star.i18n.Boundary
	Dim wordcount As Long
	
	brk = createUnoService("com.sun.star.i18n.BreakIterator")
	startpos = 0
	lc.Language = lang.language
	nextwd = brk.nextWord(paragraph, startpos, lc, 3)
	wordcount = 0
	
	While startpos <> nextwd.endPos
		wordcount = wordcount + 1
		startpos = nextwd.startPos
		nextwd = brk.nextWord(paragraph, startpos, lc, 3)
	Wend
	
	tallyCount(wordcount, style)
End Sub

Sub tallyCount(wordcount As Long, style As String)
	' Check style against array to see if it exists
	If styles(0) = none and wordcounts(0) = none Then
		styles(0) = style
		wordcounts(0) = wordcount
	Else
		For index = 0 to UBound(styles)
			If styles(index) = style Then
				'if so, add word count to existing count
				wordcounts(index) = wordcounts(index) + wordcount
				Exit For
			Elseif index = UBound(styles) Then
				ReDim Preserve styles(UBound(styles)+1)
				ReDim Preserve wordcounts(UBound(wordcounts)+1)
				'if not, add style and word count to array
				styles(UBound(styles)) = style
				wordcounts(UBound(wordcounts)) = wordcount
			End If
		Next index
	End If
End Sub

Sub displayResults
	Dim mbText As String
	Dim mbTotal As long
	
	Dlg.dispose()
	
	For i = 0 to UBound(styles)
		mbText = mbText + styles(i) + " : " + wordcounts(i) + chr(13)
		mbTotal = mbTotal + wordcounts(i)
	Next i
	
	MsgBox (mbText + chr(13) + "Total : " + mbTotal, 0, "Style Word Count")
End Sub
